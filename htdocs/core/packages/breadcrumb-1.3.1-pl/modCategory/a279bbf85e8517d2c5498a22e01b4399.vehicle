<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Snippets' => 
    array (
      'cd2c001296de8b2f8ceb7e740d9b467d' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"BreadCrumb","description":"This snippet will create a breadcrumb navigation for the current resource or a specific resource.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\r\\n * BreadCrumb\\r\\n * Copyright 2011 Benjamin Vauchel <contact@omycode.fr>\\r\\n *\\r\\n * BreadCrumb is free software; you can redistribute it and\\/or modify it\\r\\n * under the terms of the GNU General Public License as published by the Free\\r\\n * Software Foundation; either version 2 of the License, or (at your option) any\\r\\n * later version.\\r\\n *\\r\\n * BreadCrumb is distributed in the hope that it will be useful, but WITHOUT ANY\\r\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\r\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\r\\n *\\r\\n * You should have received a copy of the GNU General Public License along with\\r\\n * BreadCrumb; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\r\\n * Suite 330, Boston, MA 02111-1307 USA\\r\\n *\\r\\n * @package breadcrumb\\r\\n * @author Benjamin Vauchel <contact@omycode.fr>\\r\\n *\\r\\n * @version Version 1.3.0 pl\\r\\n * 28\\/08\\/12\\r\\n *\\r\\n * Breadcrumb is a snippet for MODx Revolution, inspired by the Jared\'s BreadCrumbs snippet.\\r\\n * It will create a breadcrumb navigation for the current resource or a specific resource.\\r\\n *\\r\\n * Optional properties:\\r\\n *\\r\\n * @property resourceId - (int) Resource ID whose breadcrumb is created; [Default value : null].\\r\\n * @property from - (int) Resource ID of the first crumb; [Default value : 0].\\r\\n * @property to - (int) Resource ID of the last crumb; [Default value : current resource id].\\r\\n * @property maxCrumbs - (int) Max crumbs shown in breadcrumb. Max delimiter template can be customize with property maxCrumbTpl ; [Default value : 100].\\r\\n * @property showHidden - (bool) Show hidden resources in breadcrumb; [Default value : true].\\r\\n * @property showContainer - (bool) Show container resources in breadcrumb; [Default value : true].\\r\\n * @property showUnPub - (bool) Show unpublished resources in breadcrumb; [Default value : true].\\r\\n * @property showCurrentCrumb - (bool) Show current resource as a crumb; [Default value : true].\\r\\n * @property showBreadCrumbAtHome - (bool) Show BreadCrumb on the home page; [Default value : true].\\r\\n * @property showHomeCrumb - (bool) Show the home page as a crumb; [Default value : false].\\r\\n * @property useWebLinkUrl - (bool) Use the weblink url instead of the url to the weblink; [Default value : true].\\r\\n * @property direction - (string) Direction or breadcrumb : Left To Right (ltr) or Right To Left (rtl) for Arabic language for example; [Default value : ltr].\\r\\n * @property scheme - (string) URL Generation Scheme; [Default value : -1].\\r\\n *\\r\\n * Templates :\\r\\n *\\r\\n * @property containerTpl - (string) Container template for BreadCrumb; [Default value : BreadCrumbContainerTpl].\\r\\n * @property currentCrumbTpl - (string) Current crumb template for BreadCrumb; [Default value : BreadCrumbCurrentCrumbTpl].\\r\\n * @property linkCrumbTpl - (string) Default crumb template for BreadCrumb; [Default value : BreadCrumbLinkCrumbTpl].\\r\\n * @property maxCrumbTpl - (string) Max delimiter crumb template for BreadCrumb; [Default value : BreadCrumbMaxCrumbTpl].\\r\\n *\\/\\r\\n\\r\\n\\/\\/ Script Properties\\r\\n$resourceId           = !empty($resourceId) ? $resourceId : $modx->getOption(\'resourceId\', $scriptProperties, null, true);\\r\\n$from                 = !empty($from) ? $from : $modx->getOption(\'from\', $scriptProperties, 0, true, true);\\r\\n$to                   = $currentResourceId = (!is_null($resourceId) ? $resourceId : (!empty($to) ? $to : $modx->getOption(\'to\', $scriptProperties, $modx->resource->get(\'id\'), true)));\\r\\n$maxCrumbs            = !empty($maxCrumbs) ? abs(intval($maxCrumbs)) : $modx->getOption(\'maxCrumbs\', $scriptProperties, 100, true);\\r\\n$showHidden           = isset($showHidden) ? (bool)$showHidden : (bool)$modx->getOption(\'showHidden\', $scriptProperties, true, true);\\r\\n$showContainer        = isset($showContainer) ? (bool)$showContainer : (bool)$modx->getOption(\'showContainer\', $scriptProperties, true, true);\\r\\n$showUnPub            = isset($showUnPub) ? (bool)$showUnPub : (bool)$modx->getOption(\'showUnPub\', $scriptProperties, true, true);\\r\\n$showCurrentCrumb     = isset($showCurrentCrumb) ? (bool)$showCurrentCrumb : (bool)$modx->getOption(\'showCurrentCrumb\', $scriptProperties, true, true);\\r\\n$showBreadCrumbAtHome = isset($showBreadCrumbAtHome) ? (bool)$showBreadCrumbAtHome : (bool)$modx->getOption(\'showBreadCrumbAtHome\', $scriptProperties, true, true);\\r\\n$showHomeCrumb        = isset($showHomeCrumb) ? (bool)$showHomeCrumb : (bool)$modx->getOption(\'showHomeCrumb\', $scriptProperties, false, true);\\r\\n$useWebLinkUrl        = isset($useWebLinkUrl) ? (bool)$useWebLinkUrl : (bool)$modx->getOption(\'useWebLinkUrl\', $scriptProperties, true, true);\\r\\n$direction            = !empty($direction) ? $direction : $modx->getOption(\'direction\', $scriptProperties, \'ltr\', true);\\r\\n$scheme               = !empty($scheme) ? $scheme : $modx->getOption(\'scheme\', $scriptProperties, $modx->getOption(\'link_tag_scheme\'), true);\\r\\n$containerTpl         = !empty($containerTpl) ? $containerTpl : $modx->getOption(\'containerTpl\', $scriptProperties, \'@CODE:<ul id=\\"breadcrumb\\" itemprop=\\"breadcrumb\\"><li><a href=\\"[[++site_url]]\\">[[++site_name]]<\\/a><\\/li>[[+crumbs]]<\\/ul>\');\\r\\n$currentCrumbTpl      = !empty($currentCrumbTpl) ? $currentCrumbTpl : $modx->getOption(\'currentCrumbTpl\', $scriptProperties, \'@CODE:<li>[[+pagetitle]]<\\/li>\');\\r\\n$linkCrumbTpl         = !empty($linkCrumbTpl) ? $linkCrumbTpl : $modx->getOption(\'currentCrumbTpl\', $scriptProperties, \'@CODE:<li><a href=\\"[[+link]]\\">[[+pagetitle]]<\\/a><\\/li>\');\\r\\n$maxCrumbTpl          = !empty($maxCrumbTpl) ? $maxCrumbTpl : $modx->getOption(\'currentCrumbTpl\', $scriptProperties, \'@CODE:<li>...<\\/li>\');\\r\\n\\r\\n\\/**\\r\\n * Return a chunk processed from chunk name, file path or direct code.\\r\\n *\\r\\n * @param string $tpl Can be chunk name, file path (@FILE:) or code (@CODE:)\\r\\n * @param array $placeholders Array of chunk placeholders\\r\\n *\\r\\n * @return string Chunk processed\\r\\n *\\r\\n *\\/\\r\\nif(!function_exists(\'processTpl\'))\\r\\n{\\r\\n\\tfunction processTpl($tpl, $placeholders = array())\\r\\n\\t{\\r\\n\\t\\tglobal $modx;\\r\\n\\r\\n\\t\\tif(preg_match(\'#^(@CODE:)#\', $tpl))\\r\\n\\t\\t{\\r\\n\\t\\t\\t$chunk = $modx->newObject(\'modChunk\');\\r\\n\\t\\t\\t$chunk->setCacheable(false);\\r\\n\\t\\t\\t$chunk->setContent(substr($tpl, 6));\\r\\n\\t\\t}\\r\\n\\t\\telseif(preg_match(\'#^(@FILE:)#\', $tpl))\\r\\n\\t\\t{\\r\\n\\t\\t\\t$chunk = $modx->newObject(\'modChunk\');\\r\\n\\t\\t\\t$chunk->setCacheable(false);\\r\\n\\t\\t\\t$chunk->setContent(file_get_contents(substr($tpl, 6)));\\r\\n\\t\\t}\\r\\n\\t\\telse\\r\\n\\t\\t{\\r\\n\\t\\t\\t$chunk = $modx->getObject(\'modChunk\', array(\'name\' => $tpl), true);\\r\\n\\t\\t\\tif(!is_object($chunk))\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\t$chunk = $modx->newObject(\'modChunk\');\\r\\n\\t\\t\\t\\t$chunk->setCacheable(false);\\r\\n\\t\\t\\t\\t$chunk->setContent(\'\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn $chunk->process($placeholders);\\r\\n\\t}\\r\\n}\\r\\n\\r\\n\\/\\/ Output variable\\r\\n$output = \'\';\\r\\n\\r\\n\\/\\/ We check if current resource is the homepage and if breadcrumb is shown for the homepage\\r\\nif(!$showBreadCrumbAtHome && $modx->resource->get(\'id\') == $modx->getOption(\'site_start\'))\\r\\n{\\r\\n\\treturn \'\';\\r\\n}\\r\\n\\r\\n\\/\\/ We get all the crumbs\\r\\n$crumbs = array();\\r\\n$crumbsCount = 0;\\r\\n$resourceId = $to;\\r\\nwhile($resourceId != $from && $crumbsCount < $maxCrumbs)\\r\\n{\\r\\n\\t$resource = $modx->getObject(\'modResource\', $resourceId);\\r\\n\\r\\n\\t\\/\\/ We check the conditions to show crumb\\r\\n\\tif(\\r\\n\\t\\t(($resourceId == $modx->getOption(\'site_start\') && $showHomeCrumb) || $resourceId != $modx->getOption(\'site_start\'))  \\/\\/ ShowHomeCrumb\\r\\n\\t\\t&& (($resource->get(\'hidemenu\') && $showHidden) || !$resource->get(\'hidemenu\'))\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\/\\/ ShowHidden\\r\\n\\t\\t&& (($resource->get(\'isfolder\') && $showContainer) || !$resource->get(\'isfolder\'))\\t\\t\\t\\t\\t\\t\\t\\t\\t\\/\\/ ShowContainer\\r\\n\\t\\t&& ((!$resource->get(\'published\') && $showUnPub) || $resource->get(\'published\')) \\t\\t\\t\\t\\t\\t\\t\\t\\t\\/\\/ UnPub\\r\\n\\t\\t&& (($resourceId == $currentResourceId && $showCurrentCrumb) || $resourceId != $currentResourceId)  \\/\\/ ShowCurrent\\r\\n\\t)\\r\\n\\t{\\r\\n\\t\\t\\/\\/ If is LTR direction, we push resource at the beginning of the array\\r\\n\\t\\tif($direction == \'ltr\')\\r\\n\\t\\t{\\r\\n\\t\\t    array_unshift($crumbs, $resource);\\r\\n\\t\\t}\\r\\n\\t\\t\\/\\/ Else we push it at the end\\r\\n\\t\\telse\\r\\n\\t\\t{\\r\\n\\t\\t    $crumbs[] = $resource;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t$crumbsCount++;\\r\\n\\t}\\r\\n\\t$resourceId = $resource->get(\'parent\');\\r\\n}\\r\\n\\r\\n\\/\\/ We build the output of crumbs\\r\\nforeach($crumbs as $key => $resource)\\r\\n{\\r\\n\\t\\/\\/ Current crumb tpl ?\\r\\n\\tif($showCurrentCrumb && ($resource->get(\'id\') == $currentResourceId))\\r\\n\\t{\\r\\n\\t\\t$tpl = $currentCrumbTpl;\\r\\n\\t}\\r\\n\\t\\/\\/ or default crumb tpl ?\\r\\n\\telse\\r\\n\\t{\\r\\n\\t\\t$tpl = $linkCrumbTpl;\\r\\n\\t}\\r\\n\\r\\n\\t\\/\\/ Placeholders\\r\\n\\t$placeholders = $resource->toArray();\\r\\n\\tif($resource->get(\'class_key\') == \'modWebLink\' && $useWebLinkUrl)\\r\\n\\t{\\r\\n\\t\\tif(is_numeric($resource->get(\'content\')))\\r\\n\\t\\t{\\r\\n\\t\\t\\t$link = $modx->makeUrl($resource->get(\'content\'), \'\', \'\', $scheme);\\r\\n\\t\\t}\\r\\n\\t\\telse\\r\\n\\t\\t{\\r\\n\\t\\t\\t$link = $resource->get(\'content\');\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\telse\\r\\n\\t{\\r\\n\\t\\t$link = $modx->makeUrl($resource->get(\'id\'), \'\', \'\', $scheme);\\r\\n\\t}\\r\\n\\t$placeholders = array_merge($resource->toArray(), array(\'link\' => $link));\\r\\n\\r\\n\\t\\/\\/ Output\\r\\n\\t$output .= processTpl($tpl, $placeholders);\\r\\n}\\r\\n\\r\\n\\/\\/ We add the max delimiter to the crumbs output, if the max limit was reached\\r\\nif($crumbsCount == $maxCrumbs)\\r\\n{\\r\\n\\t\\/\\/ If is LTR direction, we push the max delimiter at the beginning of the crumbs\\r\\n\\tif($direction == \'ltr\')\\r\\n\\t{\\r\\n\\t\\t$output = processTpl($maxCrumbTpl).$output;\\r\\n\\t}\\r\\n\\t\\/\\/ Else we push it at the end\\r\\n\\telse\\r\\n\\t{\\r\\n\\t\\t$output .= processTpl($maxCrumbTpl);\\r\\n\\t}\\r\\n}\\r\\n\\r\\n\\/\\/ We build the breadcrumb output\\r\\n$output = processTpl($containerTpl, array(\\r\\n\\t\'crumbs\' => $output,\\r\\n));\\r\\n\\r\\nreturn $output;","locked":0,"properties":"a:16:{s:4:\\"from\\";a:7:{s:4:\\"name\\";s:4:\\"from\\";s:4:\\"desc\\";s:28:\\"breadcrumb_snippet_from_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:2:\\"to\\";a:7:{s:4:\\"name\\";s:2:\\"to\\";s:4:\\"desc\\";s:26:\\"breadcrumb_snippet_to_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"maxCrumbs\\";a:7:{s:4:\\"name\\";s:9:\\"maxCrumbs\\";s:4:\\"desc\\";s:33:\\"breadcrumb_snippet_maxcrumbs_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"showHidden\\";a:7:{s:4:\\"name\\";s:10:\\"showHidden\\";s:4:\\"desc\\";s:34:\\"breadcrumb_snippet_showhidden_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"showContainer\\";a:7:{s:4:\\"name\\";s:13:\\"showContainer\\";s:4:\\"desc\\";s:37:\\"breadcrumb_snippet_showcontainer_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"showUnPub\\";a:7:{s:4:\\"name\\";s:9:\\"showUnPub\\";s:4:\\"desc\\";s:33:\\"breadcrumb_snippet_showunpub_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"showCurrentCrumb\\";a:7:{s:4:\\"name\\";s:16:\\"showCurrentCrumb\\";s:4:\\"desc\\";s:40:\\"breadcrumb_snippet_showcurrentcrumb_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"showBreadCrumbAtHome\\";a:7:{s:4:\\"name\\";s:20:\\"showBreadCrumbAtHome\\";s:4:\\"desc\\";s:44:\\"breadcrumb_snippet_showbreadcrumbatHome_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"showHomeCrumb\\";a:7:{s:4:\\"name\\";s:13:\\"showHomeCrumb\\";s:4:\\"desc\\";s:37:\\"breadcrumb_snippet_showhomecrumb_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"useWebLinkUrl\\";a:7:{s:4:\\"name\\";s:13:\\"useWebLinkUrl\\";s:4:\\"desc\\";s:37:\\"breadcrumb_snippet_useweblinkurl_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"direction\\";a:7:{s:4:\\"name\\";s:9:\\"direction\\";s:4:\\"desc\\";s:33:\\"breadcrumb_snippet_direction_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:5:\\"value\\";s:3:\\"ltr\\";s:4:\\"text\\";s:19:\\"Left To Right (ltr)\\";}i:1;a:2:{s:5:\\"value\\";s:3:\\"rtl\\";s:4:\\"text\\";s:20:\\" Right To Left (rtl)\\";}}s:5:\\"value\\";s:3:\\"ltr\\";s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"scheme\\";a:7:{s:4:\\"name\\";s:6:\\"scheme\\";s:4:\\"desc\\";s:30:\\"breadcrumb_snippet_scheme_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"containerTpl\\";a:7:{s:4:\\"name\\";s:12:\\"containerTpl\\";s:4:\\"desc\\";s:36:\\"breadcrumb_snippet_containertpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:117:\\"@CODE:<ul id=\\"breadcrumb\\" itemprop=\\"breadcrumb\\"><li><a href=\\"[[++site_url]]\\">[[++site_name]]<\\/a><\\/li>[[+crumbs]]<\\/ul>\\";s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"currentCrumbTpl\\";a:7:{s:4:\\"name\\";s:15:\\"currentCrumbTpl\\";s:4:\\"desc\\";s:39:\\"breadcrumb_snippet_currentcrumbtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:29:\\"@CODE:<li>[[+pagetitle]]<\\/li>\\";s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"linkCrumbTpl\\";a:7:{s:4:\\"name\\";s:12:\\"linkCrumbTpl\\";s:4:\\"desc\\";s:36:\\"breadcrumb_snippet_linkcrumbtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:53:\\"@CODE:<li><a href=\\"[[+link]]\\">[[+pagetitle]]<\\/a><\\/li>\\";s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"maxCrumbTpl\\";a:7:{s:4:\\"name\\";s:11:\\"maxCrumbTpl\\";s:4:\\"desc\\";s:35:\\"breadcrumb_snippet_maxcrumbtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:18:\\"@CODE:<li>...<\\/li>\\";s:7:\\"lexicon\\";s:21:\\"breadcrumb:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\r\\n * BreadCrumb\\r\\n * Copyright 2011 Benjamin Vauchel <contact@omycode.fr>\\r\\n *\\r\\n * BreadCrumb is free software; you can redistribute it and\\/or modify it\\r\\n * under the terms of the GNU General Public License as published by the Free\\r\\n * Software Foundation; either version 2 of the License, or (at your option) any\\r\\n * later version.\\r\\n *\\r\\n * BreadCrumb is distributed in the hope that it will be useful, but WITHOUT ANY\\r\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\r\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\r\\n *\\r\\n * You should have received a copy of the GNU General Public License along with\\r\\n * BreadCrumb; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\r\\n * Suite 330, Boston, MA 02111-1307 USA\\r\\n *\\r\\n * @package breadcrumb\\r\\n * @author Benjamin Vauchel <contact@omycode.fr>\\r\\n *\\r\\n * @version Version 1.3.0 pl\\r\\n * 28\\/08\\/12\\r\\n *\\r\\n * Breadcrumb is a snippet for MODx Revolution, inspired by the Jared\'s BreadCrumbs snippet.\\r\\n * It will create a breadcrumb navigation for the current resource or a specific resource.\\r\\n *\\r\\n * Optional properties:\\r\\n *\\r\\n * @property resourceId - (int) Resource ID whose breadcrumb is created; [Default value : null].\\r\\n * @property from - (int) Resource ID of the first crumb; [Default value : 0].\\r\\n * @property to - (int) Resource ID of the last crumb; [Default value : current resource id].\\r\\n * @property maxCrumbs - (int) Max crumbs shown in breadcrumb. Max delimiter template can be customize with property maxCrumbTpl ; [Default value : 100].\\r\\n * @property showHidden - (bool) Show hidden resources in breadcrumb; [Default value : true].\\r\\n * @property showContainer - (bool) Show container resources in breadcrumb; [Default value : true].\\r\\n * @property showUnPub - (bool) Show unpublished resources in breadcrumb; [Default value : true].\\r\\n * @property showCurrentCrumb - (bool) Show current resource as a crumb; [Default value : true].\\r\\n * @property showBreadCrumbAtHome - (bool) Show BreadCrumb on the home page; [Default value : true].\\r\\n * @property showHomeCrumb - (bool) Show the home page as a crumb; [Default value : false].\\r\\n * @property useWebLinkUrl - (bool) Use the weblink url instead of the url to the weblink; [Default value : true].\\r\\n * @property direction - (string) Direction or breadcrumb : Left To Right (ltr) or Right To Left (rtl) for Arabic language for example; [Default value : ltr].\\r\\n * @property scheme - (string) URL Generation Scheme; [Default value : -1].\\r\\n *\\r\\n * Templates :\\r\\n *\\r\\n * @property containerTpl - (string) Container template for BreadCrumb; [Default value : BreadCrumbContainerTpl].\\r\\n * @property currentCrumbTpl - (string) Current crumb template for BreadCrumb; [Default value : BreadCrumbCurrentCrumbTpl].\\r\\n * @property linkCrumbTpl - (string) Default crumb template for BreadCrumb; [Default value : BreadCrumbLinkCrumbTpl].\\r\\n * @property maxCrumbTpl - (string) Max delimiter crumb template for BreadCrumb; [Default value : BreadCrumbMaxCrumbTpl].\\r\\n *\\/\\r\\n\\r\\n\\/\\/ Script Properties\\r\\n$resourceId           = !empty($resourceId) ? $resourceId : $modx->getOption(\'resourceId\', $scriptProperties, null, true);\\r\\n$from                 = !empty($from) ? $from : $modx->getOption(\'from\', $scriptProperties, 0, true, true);\\r\\n$to                   = $currentResourceId = (!is_null($resourceId) ? $resourceId : (!empty($to) ? $to : $modx->getOption(\'to\', $scriptProperties, $modx->resource->get(\'id\'), true)));\\r\\n$maxCrumbs            = !empty($maxCrumbs) ? abs(intval($maxCrumbs)) : $modx->getOption(\'maxCrumbs\', $scriptProperties, 100, true);\\r\\n$showHidden           = isset($showHidden) ? (bool)$showHidden : (bool)$modx->getOption(\'showHidden\', $scriptProperties, true, true);\\r\\n$showContainer        = isset($showContainer) ? (bool)$showContainer : (bool)$modx->getOption(\'showContainer\', $scriptProperties, true, true);\\r\\n$showUnPub            = isset($showUnPub) ? (bool)$showUnPub : (bool)$modx->getOption(\'showUnPub\', $scriptProperties, true, true);\\r\\n$showCurrentCrumb     = isset($showCurrentCrumb) ? (bool)$showCurrentCrumb : (bool)$modx->getOption(\'showCurrentCrumb\', $scriptProperties, true, true);\\r\\n$showBreadCrumbAtHome = isset($showBreadCrumbAtHome) ? (bool)$showBreadCrumbAtHome : (bool)$modx->getOption(\'showBreadCrumbAtHome\', $scriptProperties, true, true);\\r\\n$showHomeCrumb        = isset($showHomeCrumb) ? (bool)$showHomeCrumb : (bool)$modx->getOption(\'showHomeCrumb\', $scriptProperties, false, true);\\r\\n$useWebLinkUrl        = isset($useWebLinkUrl) ? (bool)$useWebLinkUrl : (bool)$modx->getOption(\'useWebLinkUrl\', $scriptProperties, true, true);\\r\\n$direction            = !empty($direction) ? $direction : $modx->getOption(\'direction\', $scriptProperties, \'ltr\', true);\\r\\n$scheme               = !empty($scheme) ? $scheme : $modx->getOption(\'scheme\', $scriptProperties, $modx->getOption(\'link_tag_scheme\'), true);\\r\\n$containerTpl         = !empty($containerTpl) ? $containerTpl : $modx->getOption(\'containerTpl\', $scriptProperties, \'@CODE:<ul id=\\"breadcrumb\\" itemprop=\\"breadcrumb\\"><li><a href=\\"[[++site_url]]\\">[[++site_name]]<\\/a><\\/li>[[+crumbs]]<\\/ul>\');\\r\\n$currentCrumbTpl      = !empty($currentCrumbTpl) ? $currentCrumbTpl : $modx->getOption(\'currentCrumbTpl\', $scriptProperties, \'@CODE:<li>[[+pagetitle]]<\\/li>\');\\r\\n$linkCrumbTpl         = !empty($linkCrumbTpl) ? $linkCrumbTpl : $modx->getOption(\'currentCrumbTpl\', $scriptProperties, \'@CODE:<li><a href=\\"[[+link]]\\">[[+pagetitle]]<\\/a><\\/li>\');\\r\\n$maxCrumbTpl          = !empty($maxCrumbTpl) ? $maxCrumbTpl : $modx->getOption(\'currentCrumbTpl\', $scriptProperties, \'@CODE:<li>...<\\/li>\');\\r\\n\\r\\n\\/**\\r\\n * Return a chunk processed from chunk name, file path or direct code.\\r\\n *\\r\\n * @param string $tpl Can be chunk name, file path (@FILE:) or code (@CODE:)\\r\\n * @param array $placeholders Array of chunk placeholders\\r\\n *\\r\\n * @return string Chunk processed\\r\\n *\\r\\n *\\/\\r\\nif(!function_exists(\'processTpl\'))\\r\\n{\\r\\n\\tfunction processTpl($tpl, $placeholders = array())\\r\\n\\t{\\r\\n\\t\\tglobal $modx;\\r\\n\\r\\n\\t\\tif(preg_match(\'#^(@CODE:)#\', $tpl))\\r\\n\\t\\t{\\r\\n\\t\\t\\t$chunk = $modx->newObject(\'modChunk\');\\r\\n\\t\\t\\t$chunk->setCacheable(false);\\r\\n\\t\\t\\t$chunk->setContent(substr($tpl, 6));\\r\\n\\t\\t}\\r\\n\\t\\telseif(preg_match(\'#^(@FILE:)#\', $tpl))\\r\\n\\t\\t{\\r\\n\\t\\t\\t$chunk = $modx->newObject(\'modChunk\');\\r\\n\\t\\t\\t$chunk->setCacheable(false);\\r\\n\\t\\t\\t$chunk->setContent(file_get_contents(substr($tpl, 6)));\\r\\n\\t\\t}\\r\\n\\t\\telse\\r\\n\\t\\t{\\r\\n\\t\\t\\t$chunk = $modx->getObject(\'modChunk\', array(\'name\' => $tpl), true);\\r\\n\\t\\t\\tif(!is_object($chunk))\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\t$chunk = $modx->newObject(\'modChunk\');\\r\\n\\t\\t\\t\\t$chunk->setCacheable(false);\\r\\n\\t\\t\\t\\t$chunk->setContent(\'\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn $chunk->process($placeholders);\\r\\n\\t}\\r\\n}\\r\\n\\r\\n\\/\\/ Output variable\\r\\n$output = \'\';\\r\\n\\r\\n\\/\\/ We check if current resource is the homepage and if breadcrumb is shown for the homepage\\r\\nif(!$showBreadCrumbAtHome && $modx->resource->get(\'id\') == $modx->getOption(\'site_start\'))\\r\\n{\\r\\n\\treturn \'\';\\r\\n}\\r\\n\\r\\n\\/\\/ We get all the crumbs\\r\\n$crumbs = array();\\r\\n$crumbsCount = 0;\\r\\n$resourceId = $to;\\r\\nwhile($resourceId != $from && $crumbsCount < $maxCrumbs)\\r\\n{\\r\\n\\t$resource = $modx->getObject(\'modResource\', $resourceId);\\r\\n\\r\\n\\t\\/\\/ We check the conditions to show crumb\\r\\n\\tif(\\r\\n\\t\\t(($resourceId == $modx->getOption(\'site_start\') && $showHomeCrumb) || $resourceId != $modx->getOption(\'site_start\'))  \\/\\/ ShowHomeCrumb\\r\\n\\t\\t&& (($resource->get(\'hidemenu\') && $showHidden) || !$resource->get(\'hidemenu\'))\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\/\\/ ShowHidden\\r\\n\\t\\t&& (($resource->get(\'isfolder\') && $showContainer) || !$resource->get(\'isfolder\'))\\t\\t\\t\\t\\t\\t\\t\\t\\t\\/\\/ ShowContainer\\r\\n\\t\\t&& ((!$resource->get(\'published\') && $showUnPub) || $resource->get(\'published\')) \\t\\t\\t\\t\\t\\t\\t\\t\\t\\/\\/ UnPub\\r\\n\\t\\t&& (($resourceId == $currentResourceId && $showCurrentCrumb) || $resourceId != $currentResourceId)  \\/\\/ ShowCurrent\\r\\n\\t)\\r\\n\\t{\\r\\n\\t\\t\\/\\/ If is LTR direction, we push resource at the beginning of the array\\r\\n\\t\\tif($direction == \'ltr\')\\r\\n\\t\\t{\\r\\n\\t\\t    array_unshift($crumbs, $resource);\\r\\n\\t\\t}\\r\\n\\t\\t\\/\\/ Else we push it at the end\\r\\n\\t\\telse\\r\\n\\t\\t{\\r\\n\\t\\t    $crumbs[] = $resource;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t$crumbsCount++;\\r\\n\\t}\\r\\n\\t$resourceId = $resource->get(\'parent\');\\r\\n}\\r\\n\\r\\n\\/\\/ We build the output of crumbs\\r\\nforeach($crumbs as $key => $resource)\\r\\n{\\r\\n\\t\\/\\/ Current crumb tpl ?\\r\\n\\tif($showCurrentCrumb && ($resource->get(\'id\') == $currentResourceId))\\r\\n\\t{\\r\\n\\t\\t$tpl = $currentCrumbTpl;\\r\\n\\t}\\r\\n\\t\\/\\/ or default crumb tpl ?\\r\\n\\telse\\r\\n\\t{\\r\\n\\t\\t$tpl = $linkCrumbTpl;\\r\\n\\t}\\r\\n\\r\\n\\t\\/\\/ Placeholders\\r\\n\\t$placeholders = $resource->toArray();\\r\\n\\tif($resource->get(\'class_key\') == \'modWebLink\' && $useWebLinkUrl)\\r\\n\\t{\\r\\n\\t\\tif(is_numeric($resource->get(\'content\')))\\r\\n\\t\\t{\\r\\n\\t\\t\\t$link = $modx->makeUrl($resource->get(\'content\'), \'\', \'\', $scheme);\\r\\n\\t\\t}\\r\\n\\t\\telse\\r\\n\\t\\t{\\r\\n\\t\\t\\t$link = $resource->get(\'content\');\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\telse\\r\\n\\t{\\r\\n\\t\\t$link = $modx->makeUrl($resource->get(\'id\'), \'\', \'\', $scheme);\\r\\n\\t}\\r\\n\\t$placeholders = array_merge($resource->toArray(), array(\'link\' => $link));\\r\\n\\r\\n\\t\\/\\/ Output\\r\\n\\t$output .= processTpl($tpl, $placeholders);\\r\\n}\\r\\n\\r\\n\\/\\/ We add the max delimiter to the crumbs output, if the max limit was reached\\r\\nif($crumbsCount == $maxCrumbs)\\r\\n{\\r\\n\\t\\/\\/ If is LTR direction, we push the max delimiter at the beginning of the crumbs\\r\\n\\tif($direction == \'ltr\')\\r\\n\\t{\\r\\n\\t\\t$output = processTpl($maxCrumbTpl).$output;\\r\\n\\t}\\r\\n\\t\\/\\/ Else we push it at the end\\r\\n\\telse\\r\\n\\t{\\r\\n\\t\\t$output .= processTpl($maxCrumbTpl);\\r\\n\\t}\\r\\n}\\r\\n\\r\\n\\/\\/ We build the breadcrumb output\\r\\n$output = processTpl($containerTpl, array(\\r\\n\\t\'crumbs\' => $output,\\r\\n));\\r\\n\\r\\nreturn $output;"}',
        'guid' => '802936e45fad7fc910d4be16f074860c',
        'native_key' => 1,
        'signature' => '1cbe02f4547c329edd7c280f2df112c5',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
  ),
  'namespace' => 'breadcrumb',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"breadcrumb-1.3.1-pl\\/modCategory\\/a279bbf85e8517d2c5498a22e01b4399\\/0\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"breadcrumb"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '06357ce7af8d28c7de20d46106b81a80',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => 'a279bbf85e8517d2c5498a22e01b4399',
  'native_key' => 1,
  'object' => '{"id":1,"parent":0,"category":"BreadCrumb"}',
);