
http://modx-shopkeeper.ru/ - Shopkeeper

Разработано при поддержке студий "Без рекламы" (http://www.no-ad.ru/) и "Симпл Дрим" (http://www.simpledream.ru/).

Разработчик - Andchir

---------------------------------------

Установка

1.
    * Можно скачать дополнение в административной части сайта. Для этого перейти в "Система" -> "Управление пакетами". Нажать кнопку "Скачать дополнение". Далее перейти "Extras" -> "E-commerce" и в строке "Shopkeeper" нажать кнопку "Загрузить", потом кнопку "Готово".
    
    * Если вы скачали файл с сайта modx.com, загрузите архив "shopkeeper-2.0-*.transport.zip" в папку core/packages/ вашего сайта. В панеле управления перейти "Система" -> "Управление пакетами" -> "Добавить новый пакет" -> "Искать пакеты локально" -> "Дальше".

2. В таблице пакетов появится пакет "shopkeeper". Нажать кнопку "Установить".

3. Закончить установку.

4. Для добавления виджета на панель перейти "Панель" -> "Панели" -> "Default" -> "Редактировать" -> "Добавить виджет" -> "Статистика заказов".
    Перетащить в списке виджетов вверх.

Настройка

1. Открыть "Элементы" -> "Сниппеты" -> "Shopkeeper" -> "Параметры".

2. Нажать кнопку "Добавить набор параметров", отметить флажок "Создать новый набор параметров" и заполнить поля. Имя набора желательно на латинице, например "cart_catalog".

3. В списке слева выбрать созданный набор и при необходимости изменить параметры.

4. В шаблоне в месте, где нужно вывести корзину покупок, вызвать сниппет Shopkeeper с указанием набора параметров. Пример:

[[!Shopkeeper@cart_catalog?propertySetName=`cart_catalog`]]

propertySetName - имя набора параметров сниппета. Также это имя нужно указать после символа "@".

По этому набору параметров происходит синхронизация при ajax-запросах.

Параметры сниппета по умолчанию редактировать не рекомендуется, т.к. при обновлении они могут измениться.

В админке в конфигурации компонента ("Система" -> "Настройки системы" -> "shopkeeper") настроить параметр "Набор параметров сниппета по умолчанию". Этот набор параметров будет применяться при отправке заказа.

---------------------------------------

Настройка контекста "catalog"

Размещение товаров в отдельном контексте не обязательно, но рекомендуется, если планируется много товаров (больше 2000). Это позволит для каталога сделать индивидуальные настройки, например, при необходимости отключить дружественные URL (friendly_urls). 

Создать контекст "catalog". Настройки контекста:
error_page: 10
unauthorized_page: 11
где 10 - ID документа каталога, error_page - страница 404, unauthorized_page - страница 403 (доступ запрещен)

Создать структуру категорий каталога товаров в контекте.

Права доступа контекста "catalog" ("Система" -> "Контексты" -> "catalog" -> "Редактировать" -> "Права доступа") должны быть такие же как у контекста "web", т.е.:
аноним, 9999, Load only
Administrator, 0, Administrator

В контекте "web" создать документ-ссылку "Каталог", в поле "Ссылка" ввести "catalog/".

Проверить чтобы был установлен плагин "contextSwitch" (core/components/shopkeeper/elements/plugins/context_switch.php).

Если используется регистрация, нужно создать группу пользователей. Для этого перейти "Безопасность" -> "Контроль доступа".
Нажать кнопку "Новая группа пользователей" и ввести название, например "Покупатели". Далее кликнуть правой кнопкой мыши на группе и выбрать "Редактировать группу пользователей".
Перейти на вкладку "Доступ к контекстам". Нажать кнопку "Добавить контекст", выбрать контекст "web", минимальная роль - 9999, Политика доступа - Load only. Также добавить контекст "catalog" (доступа к контексту "mgr" быть не должно).
Перезагрузить права доступа: "Безопасность" -> "Перезагрузить права доступа".

Товары создаются как обычные ресурсы. Для удобства можно использовать компонент "Group Edit" (http://modx.com/extras/package/groupedit).

---------------------------------------

Дополнительные параметры товаров:

Товарам можно назначать параметры, которые покупатель сможет выбрать перед добавлением товара в корзину.
Параметры выводятся в виде выпадающего списка - shk_select, радио кнопок - shk_radio или флажков (чекбоксов) - shk_checkbox.
Выбрать тип вывода можно в настройках TV-параметра на вкладке "Параметры вывода".

Значения параметров (на странице редактирования ресурса (товара)) вводятся по такому принципу:
название параметра 1==цена 1||название параметра 2==цена 2||...

Можно ввести цену параметра со знаком умножения: Вес==*0.5||Вес==*1
В этом случае цена товара будет умножена на цену параметра.

В чанке сниппета getResources параметры выводятся как плейсхолдеры: [[+tv.param1]].

На странице товара (в шаблоне товара) нужно изменить ID параметра. Сделать это можно с помощью фильтра replace:
[[*param1:replace=`[[+id]]==[[*id]]`]]

Контроллер параметров вывода: core/model/modx/processors/element/tv/renders/mgr/properties/
Параметры вывода: manager/templates/default/element/tv/renders/properties/
Контроллеры вывода: core/model/modx/processors/element/tv/renders/web/output/

---------------------------------------

param-edit

Для удобства ввода параметров и цен используйте тип ввода "param-edit".

В параметрах типа ввода можно настроить: ширину полей, число полей в строке, значение по умолчанию, включить возможность динамически добавлять у удалять поля в столбцах.

Этот тип ввода также можно использовать для создания таблиц характеристик товара. Для вывода таблицы на сайте можно использовать сниппет "param_edit_table" (shopkeeper/elements/snippets/param_edit_table.php).

Пример использования:

[[shk_include?
&file=`core/components/shopkeeper/elements/snippets/param_edit_table.php`
&tvName=`options`
&tpl=`properties_table`
]]

Пример чанка "tpl" (разделён на 3 части):

<table>[[+inner]]</table>
<!--tpl_separator-->
<tr class="[[+row_even]]">
    [[+inner]]
</tr>
<!--tpl_separator-->
<td class="">[[+col_num]]. [[+field]]</td>


Параметры сниппета

docId - ID ресурса знаения которого нужно выводить.
tvName - Имя TV параметра.
tvValue - Строка со значениями. Если указывается этот параметр, docId и tvName не нужны.
tpl - имя чанка шаблона для вывода значений. Чанк состоит из трёх частей, разделённых разделителем <!--tpl_separator-->. См. пример выше.
noEmpty - не выводить пустые значения. По умолчанию включено.
toPlaceholder - Отправить вывод в плейсхолдер. Указать название плейсхолдера.
minCount - Минимальное количество строк со значениями при котором нужно выводить эти значения.
rowIndex - Номер строки от нуля, которую нужно вывести.
separateCols - Разделять колонки таблицы на отдельные плейсхолдеры. Например [[+param1_1]] [[+param1_2]] ...

---

Код сниппета "include":

<?php
if (file_exists(MODX_BASE_PATH.$file)){
   $o = include MODX_BASE_PATH.$file;
}else{ $o = 'File not found at: '.$file; }
return $o;

---------------------------------------

Отправка писем покупателю при смене статуса заказа:

Если вы хотите чтобы при смене статуса заказа покупателю отправлялось электронное письмо, в конфигурации модуля (основные настройки) нужно создать параметр с ключём "shk.mailstatus_1", где 1 - номер статуса от нуля.
В значении параметра указать имя чанка шаблона письма, например "@FILE mailChangeStatus.tpl". Пространство имён - выбрать "shopkeeper".

---------------------------------------

Для отправки данных заказа на почту и в компонент Shopkeeper используется сниппеты FormIt и shk_fihook (пример ниже).

После отправки заказа на любой странице доступны плейсхолдеры с данными этого заказа:

shk.id - ID заказа;
shk.price - общая цена заказа;
shk.currency - валюта заказа;
shk.date - дата заказа в формате ДД.ММ.ГГГГ;
shk.full_date - дата и время заказа в формате ГГГГ-ММ-ДД ЧЧ:ММ:СС;
shk.email - адрес эл.почты покупателя;
shk.phone - номер телефона покупателя;
shk.delivery - способ доставки;
shk.payment - способ оплаты;
shk.userid - ID пользователя (покупателя).

---------------------------------------

Инструкция по использованию компонента "Управление заказами"
---

Сортировка заказов

По умолчанию все заказы отсортированы по ID в обратном порядке, т.е. самый новый вверху. Для изменения сортировки нажать на заголовок столбца таблицы, по которому нужно сделать сортировку. Повторное нажатие - обратная сортировка.

Поиск

Для поиска заказа введите в поле поиска фамилию или адрес покупателя - поиск происходит по контактным данным заказов. Для отмены поиска очистить поле и снова нажать "Искать".

Статусы заказов и заметки к заказам

Для изменения статуса заказа в строке нужного заказа кликнуть два раза по названию текущего статуса и в появившемся списке выбрать новый статус. При этом покупателю будет отправленно электронное письмо с информацией о статусе, перечнем товаров, ценой и указанными контактными данными.
Можно отметить сразу несколько заказов флажками и через кнопку "Массовые" действия изменить для них статус. При изменении статуса через массовые действия письма покупателям не отправляется.
Для того чтобы сделать к заказу какую-то заметку (покупателю не отправляется) - кликнуть два раза в соответствующем столбце и ввести текст. Нажать клавижу "Ввод" или кликнуть в любом свободном месте для сохранения.

Просмотр и редактирование заказа

Для просмотра подробностей заказа нажать правой кнопкой мыши в строке нужного заказа и выбрать "Подробности заказа". На вкладках "Состав заказа" и "Контактная информация" можно увидеть соответствующую инфорацию. На вкладке "Редактировать заказ" - изменить состав заказа (наименования, кол-во товара, цену). Флажок справа в строке служит для определения доступен ли товар для покупке. Если флажок сбросить, соответствующий товар будет вычеркнут в списке и его цена не будет учитываться.
Для добавления товара к заказу открыть блок "Добавить к заказу". Заполнить поля. Если поле "цена" оставить пустым, при сохранении цена будет взята автоматически. Нажать кнопку "Сохранить".

В столбце "Пользователь" можно увидеть имя пользователя (если зарегистрирован), которым сделан заказ. Кликнув по ссылке можно перейти на страницу с подробной информацией пользователя.

На вкладке "Конфигурация" можно изменить названия и цвет статусов и перечень способов доставки (возможность изменения способа доставки согласовать с разработчиком интернет-магазина).

---------------------------------------

Вывод заказов в компоненте управления заказами только тех пользователей, которые закреплены за менеджером.

В компоненте управления заказами предусмотрена возможность выводить заказы, которые сделаны только пользователями, которые состоят в определённой группе.
Для каждого менеджера магазина можно назначить группу пользователей, заказы от которой он сможет просматривать в компоненте.
Для этого нужно:

1. Открыть "Система" -> "Настройки системы" -> "shopkeeper". Установить параметру "Включить ограничение просмотра заказов от групп пользователей" (ключ "shk.manager_view_limit") значение "Да".
2. Открыть "Безопасность" -> "Управление пользователями".
3. Кликнуть правой кнопкой мыши на строке менеджера, для которого нужно назначить группу пользователей, которую он сможет просматривать в списке заказов, и выбрать "Редактировать".
4. Перейти на вкладку "Дополнительные поля данных". Если атрибута "shk_viewrole" ещё нет, нажать кнопку "Добавить атрибут". Заполнить поля: "Имя" - ввести "shk_viewrole", "Значение" - название группы пользователей, которую сможет просматривать в списке заказов менеджер (например "Крупный опт"). Можно несколько через запятую. Нажать "Сохранить".
5. Если атрибут "shk_viewrole" уже создан и нужно его изменить, кликнуть по строке с данным атрибутом в блоке "Атрибуты" и значения появятся в блоке "Редактирование формы". Изменить значение поля и нажать кнопку "Установить".
6. Нажать кнопку "Сохранить".

Теперь в компоненте управления заказами менеджер сможет просматривать заказы только от определённой группы пользователей (например "Крупный опт").
Администратор (состоящий в группе "Administrator") видит заказы от любых пользователей.

---------------------------------------

Вывод товаров (из контекста "catalog") с постраничной разбивкой:

[[!getPage?
&elementClass=`modSnippet`
&element=`getProducts`
&tplPath=`core/components/shopkeeper/elements/chunks/ru/`
&tpl=`@FILE product1.tpl`
&context=`catalog`
&includeTVs=`1`
&includeTVList=`price,image,producer,country`
&limit=`10`
&pageFirstTpl=` <li class="control"><a [[+classes]] href="[[+href]]">Первая</a></li> `
&pageLastTpl=` <li class="control"><a [[+classes]] href="[[+href]]">Последняя</a> </li> `
]]
<br class="clear" />
<ul class="pages">
[[!+page.nav]]
</ul>

Используются сниппеты getProducts и getPage. Вместо getProducts можно использовать getResources.

Документация getProducts: http://modx-shopkeeper.ru/documentation/modx-revolution/snippet-getproducts.html

======================================

Шаблоны и плейсхолдеры:

cartRowTpl
Шаблон (чанк) строки с информацией о товаре в корзине

[[+name]] - название товара;
[[+id]] - ID товара;
[[+link]] - ссылка на страницу товара;
[[+addit_data]] - дополнительные параметры товара;
[[+price]] - цена товара;
[[+price_total]] - общая цена товара, включая доп. параметры;
[[+price_count]] - цена товара, умнженная на кол-во;
[[+currency]] - валюта товара;
[[+count]] - количество товара;
[[+this_page_url]] - адрес текущей страницы;
[[+index]] - порядковый номер товара в корзине от нуля;
[[+num]] - порядковый номер товара в корзине от единицы;
[[+even]] - четный или нечетный товар (выводит 1 или 0);
[[+comma]] - запятая (выводится между товарами);
[[+url_del_item]] - ссылка на удаление товара из корзины;
[[+available]] - доступен (available) или нет (notavailable) товар для покупки;
[[+s]] - если товар не доступен для покупки, выводит открывающий тег <s>;
[[+/s]] - если товар не доступен для покупки, выводит закрывающий тег </s>;
[[+любой TV]] - любой TV-параметр, например [[+image]];
[[+shk_любой TV]] - любой доп. параметр, выбранный при добавлении товара в корзину (из [[+addit_data]]), например [[+shk_param1]].

cartTpl
Шаблон (чанк) корзины

[[+inner]] - список товаров (по шаблону cartRowTpl);
[[+price_total]] - общая цена товаров в корзине;
[[+items_total]] - общее число товаров в корзине;
[[+items_unique_total]] - общее число уникальных товаров в корзине;
[[+plural]] - слово "товар" во множественном числе в зависимости от числа выбранных товаров;
[[+this_page_url]] - адрес текущей страницы;
[[+empty_url]] - ссылка для очистки корзины;
[[+order_page_url]] - ссылка на страницу оформления заказа;
[[+currency]] - валюта товаров;
[[+plugin]] - вывод плагина с событием "OnSHKcartLoad".

additDataTpl
Шаблон для доп. параметров в корзине

[[+param]] - название параметра и цена;
[[+name]] - название параметра;
[[+price]] - цена параметра.

orderDataTpl (в сниппете) и order_data_tpl (в настройках компонента)
Шаблон для содержимого заказа (в письме и компоненте)

[[+price_total]] - общая цена товаров в корзине;
[[+items_total]] - общее число товаров в корзине;
[[+items_unique_total]] - общее число уникальных товаров в корзине;
[[+currency]] - валюта товаров;
[[+loop]], [[+end_loop]] - начало и конец строки данных товаров (цикл). Внутри доступны все плейсхолдеры из cartRowTpl.


emailTpl
Шаблон письма о заказе сниппета FromIt

[[+orderID]] - ID заказа;
[[+orderData]] - список товаров в заказе по шаблону "orderDataTpl";
[[+date]] - дата и время заказа.

======================================

Параметры сниппета:

lang - Язык (по умолчанию `ru`);
prodCont - CSS-селектор элемента, внутри которого находится информация о товаре (по умолчанию `div.shk-item`);
tplPath - Путь до папки с чанками сниппета (по умолчанию `core/components/shopkeeper/elements/chunks/ru/`);
cartTpl - Шаблон корзины (по умолчанию `@FILE shopCart.tpl`);
cartRowTpl - Шаблон строки корзины (по умолчанию `@FILE shopCartRow.tpl`);
additDataTpl- Шаблон для доп. параметров в корзине (по умолчанию `@FILE additData.tpl`);
orderDataTpl - Шаблон для содержимого заказа (по умолчанию `@FILE orderData.tpl`); Для того чтобы параметр применился необходимо указать нужный набор параметров в конфигурации компонента в параметре "shk.property_set_default".
cartHelperTpl - Шаблон для всплывающего блока (хелпера) (по умолчанию берётся из shopkeeper.js);
flyToCart - Эффект добавления товара в корзину - helper | image | nofly (по умолчанию `helper`);
priceTV - Имя TV параметра цены (по умолчанию `price`);
style - Стиль корзины (по умолчанию `default`);
currency - Валюта по умолчанию (по умолчанию `руб.`);
noCounter - Не показывать стрелки изменения кол-ва товара (по умолчанию `0`);
noLoader - Не показывать прелоадер (по умолчанию `0`);
orderFormPage - ID страницы с формой оформления заказа (по умолчанию `2`);
goToOrderFormPage - Переходить на страницу оформления заказа сразу после добавлении товара в корзину (по умолчанию `0`);
counterField - Добавить ко всем полям кол-ва товара стрелки больше/меньше (по умолчанию `0`);
counterFieldCart - Добавить ко всем полям кол-ва товара в корзине стрелки больше/меньше (по умолчанию `0`);
excepDigitGroup - Разделять числа цен в корзине на разрядым (по умолчанию `1`);
changePrice - При изменении параметров с ценой - изменяется цена товара, а индекс с плюсом не появляется (по умолчанию `0`);
allowFloatCount - Разрешить покупать дробное число товара (по умолчанию `0`);
noJavaScript - Работать без JavaScript (по умолчанию `0`);
noJQuery - Не подгружать jquery.js (по умолчанию `0`);
noConflict - Включить режим noConflict для jQuery. Используется, если на сайте уже используется другая JS-библиотека (не jQuery) (по умолчанию `0`);
animCart - Анимация изменения высоты корзины (по умолчанию `1`);
hideOn - Не выводить корзину на страницах (id через запятую) (по умолчанию `0`);
debug - Включить режим отладки (по умолчанию `0`);
TVsaveList - список имён TV-параметров которые нужно сохранить в БД при отправке заказа. Если пусто, сохраняются все TV.
fromParentList - список полей через запятую, которые нужно добавить товарам от родителей. Например "pagetitle,image" - в корзине будут доступны плейсхолдеры [[+parent.pagetitle]] и [[+parent.image]]. По умолчанию выключено.
fromParentHeight - сколько уровней родителей учитывать при использовании параметра "fromParentList". Например первый уровень: [[+parent.pagetitle]], второй: [[+parent2.pagetitle]]. По умолчанию 1.

======================================

Выбор и добавление к заказу метода доставки

Список методов доставки и цен можно создать в конфигурации компонента. Первое поле в строке - наименование доставки, второе поле - цена.
Для вывода и добавления метода доставки к заказу можно использовать плагин "shk_delivery".
Проверить чтобы в админке был создан плагин с событием "OnSHKbeforeCartLoad" и который использует код из файла core/components/shopkeeper/elements/plugins/delivery.php.
На вкладке "Параметры" плагина можно настроить шаблон для вывода списка методов доставки. Плагин создаёт плейсхолдер "shk_delivery".

Пример:
<select name="shk_delivery">
    [[+shk_delivery]]
</select>

После отправки формы заказа доставка будет добавлена к заказу.

======================================

JS-callback функции:

SHKfillCartCallback(form) - подана команда на добавление товара в корзину;
SHKemptyCartCallback() - подана команда на очистку корзины;
SHKloadCartCallback() - корзина загружена / обновлена;
SHKtoCartCallback(form) - подана команда отправить товар в корзину.
SHKrecountItemCallback(count,el) - подана команда пересчитать кол-во товара в корзине

Просто создайте функции с этими именами и они будут вызваны при определенном действии.

--------------------------------------

События для плагинов:

OnSHKaddProduct - Добавление товара в корзину. $purchaseArray
OnSHKgetProductPrice - Выборка цены товара при добавлении в корзину. $purchaseArray
OnSHKcalcTotalPrice - Рассчет полной цены товаров в корзине. $price_total, $purchases
OnSHKbeforeCartLoad - Вызывается до начала формирования HTML-кода корзины.
OnSHKcartLoad - Вывод корзины. $items_total, $price_total
OnSHKChangeStatus - Изменение статуса заказа. Доступны: $order_id, $status.
OnSHKsaveOrder - Отправка заказа. $order_id
OnSHKScriptsLoad - Загрузка скриптов компонента управления заказами. Можно подгрузить свой JS-файл.

======================================

Оформление заказа:

[[!Shopkeeper@order_page?propertySetName=`order_page`]]

[[!FormIt?
&hooks=`spam,shk_fihook,email,FormItAutoResponder,redirect`
&submitVar=`order`
&emailTpl=`shopOrderReport`
&fiarTpl=`shopOrderReport`
&emailSubject=`В интернет-магазине "[[++site_name]]" сделан новый заказ`
&fiarSubject=`Вы сделали заказ в интернет-магазине "[[++site_name]]"`
&emailTo=`[[++emailsender]]`
&redirectTo=`13`
&validate=`address:required,fullname:required,email:email:required,phone:required`
&errTpl=`<br /><span class="error">[[+error]]</span>`
]]

[[!If?subject=`[[+shk.items_total]]`&operator=`GT`&operand=`0`&then=`
    [[!$shopOrderForm]]
`&else=`

`]]

--------------------------------

чанк shopOrderForm: core/components/shopkeeper/elements/chunks/ru/shopOrderForm.tpl

-------------------------------------

чанк shopOrderReport: core/components/shopkeeper/elements/chunks/ru/shopOrderReport.tpl

============================================

Авторизация:

[[!Login?
&loginTpl=`lgnLoginTpl`
&logoutTpl=`lgnLogoutTpl`
&errTpl=`lgnErrTpl`
&logoutResourceId=`1`
]]

-----------------------------------------

lgnLoginTpl:

<div class="loginForm">
    <div class="loginMessage">[[+errors]]</div>
    <div class="loginLogin">

<form class="loginLoginForm" action="[[~[[*id]]]]" method="post">
<fieldset class="loginLoginFieldset">
    <input class="returnUrl" type="hidden" name="returnUrl" value="[[+request_uri]]" />
    <input class="loginLoginValue" type="hidden" name="service" value="login" />
    
    <p><label id="loginUsername">[[%login.username]]</label></p>
    <p><input id="loginUsername" type="text" name="username" /></p>
    
    <p><label id="loginPassword">[[%login.password]]</p>
    <p><input id="loginPassword" type="password" name="password" /></p>
    
    <p><input type="submit" name="Login" value="[[+actionMsg]]" /></p>
</fieldset>
</form>

<p><a href="[[~14]]">Регистрация</a></p>

    </div>
</div>

-----------------------------------------

lgnLogoutTpl:

<p>Здравствуйте, [[!+modx.user.id:userinfo=`fullname`]]!</p>
<p>
    <a href="[[~15]]">Профиль</a>
    &nbsp;&nbsp;
    <a href="[[+logoutUrl]]">Выйти</a>
</p>

===========================================

Регистрация:

[[!Register?
    &submitVar=`registerbtn`
    &activationEmailTpl=`lgnActivationEmailTpl`
    &activationEmailSubject=`Спасибо за регистрацию!`
    &submittedResourceId=`3`
    &usergroups=`Покупатели`
    &activation=`0`
    &validate=`nospam:blank,
      username:required,
      password:required,
      password_confirm:password_confirm=^password^,
      fullname:required,
      email:required:email`
    &placeholderPrefix=`reg.`
]]

<div class="registerMessage">[[!+reg.error.message]]</div>
     
<form class="form" action="[[~[[*id]]]]" method="post">
<input type="hidden" name="nospam" value="[[!+reg.nospam]]" />

<table cellpadding="5">
    <tr>
        <td>Логин*:</td>
        <td>
            <input type="text" name="username" id="username" value="[[!+reg.username]]" />
            <div class="error">[[!+reg.error.username]]</div>
        </td>
    </tr>
    <tr>
        <td>Пароль*:</td>
        <td>
            <input type="password" name="password" id="password" value="[[!+reg.password]]" />
            <div class="error">[[!+reg.error.password]]</div>
        </td>
    </tr>
    <tr>
        <td>Повторите пароль*:</td>
        <td>
            <input type="password" name="password_confirm" id="password_confirm" value="[[!+reg.password_confirm]]" />
            <div class="error">[[!+reg.error.password_confirm]]</div>
        </td>
    </tr>
    <tr>
        <td>Ф.И.О.*:</td>
        <td>
            <input type="text" name="fullname" id="fullname" value="[[!+reg.fullname]]" />
            <div class="error">[[!+reg.error.fullname]]</div>
        </td>
    </tr>
    <tr>
        <td>Адрес эл. почты*:</td>
        <td>
            <input type="text" name="email" id="email" value="[[!+reg.email]]" />
            <div class="error">[[!+reg.error.email]]</div>
        </td>
    </tr>
    <tr>
        <td>Телефон:</td>
        <td>
            <input type="text" name="phone" id="phone value="[[!+reg.phone]]" />
            <div class="error">[[!+reg.error.phone]]</div>
        </td>
    </tr>
    <tr>
        <td>Адрес доставки:</td>
        <td>
            <textarea name="address" id="address">[[!+reg.address]]</textarea>
            <div class="error">[[!+reg.error.address]]</div>
        </td>
    </tr>
    <tr>
        <td><input type="submit" name="registerbtn" value="Зарегистрироваться" /></td>
        <td></td>
    </tr>
</table>

</form>


------------------------------------------

[[!UpdateProfile? &placeholderPrefix=`usr`]]

<div class="error">[[+error.message]]</div>

[[+login.update_success:if=`[[+login.update_success]]`:is=`1`:then=`<div>Изменения сохранены.</div>`]]

<form class="form" action="[[~[[*id]]]]" method="post">

<table cellpadding="5">
    <tr>
        <td>Ф.И.О.:</td>
        <td>
            <input type="text" name="fullname" id="fullname" value="[[!+usr.fullname]]" />
            <div class="error">[[!+usr.error.fullname]]</div>
        </td>
    </tr>
    <tr>
        <td>Адрес эл. почты:</td>
        <td>
            <input type="text" name="email" id="email" value="[[!+usr.email]]" />
            <div class="error">[[!+usr.error.email]]</div>
        </td>
    </tr>
    <tr>
        <td>Телефон:</td>
        <td>
            <input type="text" name="phone" id="phone" value="[[!+usr.phone]]" />
            <div class="error">[[!+usr.error.phone]]</div>
        </td>
    </tr>
    <tr>
        <td>Адрес доставки:</td>
        <td>
            <textarea name="address" id="address">[[!+usr.address]]</textarea>
            <div class="error">[[!+usr.error.address]]</div>
        </td>
    </tr>
    <tr>
        <td><input type="submit" name="registerbtn" value="Сохранить" /></td>
        <td></td>
    </tr>
</table>

</form>
